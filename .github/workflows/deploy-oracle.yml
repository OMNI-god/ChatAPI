name: Deploy to Oracle VM

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout source (optional for local use)
      - name: Checkout source
        uses: actions/checkout@v4

      # 2️⃣ Clone or pull repository on VM
      - name: Clone or pull repository
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            PROJECT_DIR=~/ChatAPI
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Cloning repository..."
              git clone https://github.com/OMNI-god/ChatAPI.git $PROJECT_DIR
            else
              echo "Pulling latest changes..."
              cd $PROJECT_DIR
              git reset --hard
              git pull origin main
            fi

      # 3️⃣ Install EF Core CLI locally if missing
      - name: Setup EF Core CLI
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            cd ~/ChatAPI
            dotnet new tool-manifest || true
            dotnet tool install dotnet-ef --version 9.* || true
            dotnet tool restore

      # 4️⃣ Run EF Core migrations
      - name: Run EF migrations
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            cd ~/ChatAPI
            export ConnectionStrings__Default="${{ secrets.DB_ORACLE_CONNECTION }}"
            export Jwt__Key="${{ secrets.JWT_KEY }}"
            dotnet ef database update --project ./ChatAPI.csproj

      # 5️⃣ Build & publish project
      - name: Build & publish
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            cd ~/ChatAPI
            dotnet build -c Release
            dotnet publish -c Release -o ~/ChatAPI_Release

      # 6️⃣ Deploy & start systemd service
      - name: Deploy & start service
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.ORACLE_VM_IP }}
          username: ${{ secrets.ORACLE_VM_USER }}
          key: ${{ secrets.ORACLE_SSH_PRIVATE_KEY }}
          script: |
            if [ ! -f /etc/systemd/system/chatapi.service ]; then
              echo "Creating systemd service..."
              sudo bash -c 'cat > /etc/systemd/system/chatapi.service <<EOF
